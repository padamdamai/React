// // making API calls or fathing data 


import React from "react";


export default function Apps(){

const[starWardata ,setStarWarData ]= React.useState({});

 fetch("https://jsonplaceholder.typicode.com/users")  // fatching the API 
.then(res => res.json())  // receive  the response with json
.then(data =>setStarWarData(data)) //turning into javascript objet for using 



return (
  <div>
    <pre>{ JSON.stringify(starWardata,null,2)}</pre>
  </div>
)
}






// introductionn to useEffect and it's dependency array 

import  React from 'react'

export default function App(){

const[starWardata ,setStarWarData ]= React.useState({});
const [count ,setCount]= React.useState(0);

console.log("components rendered");

React.useEffect(function() {
  console.log("use Effect");

  //this fetch is like a side effect because it is outside of react environment 
//    fetch("https://jsonplaceholder.typicode.com/users")  // fatching the API 
// .then(res => res.json())  // receive  the response with json
// .then(data =>setStarWarData(data)) //turning into javascript objet for using 

}, [count])  
//adding the second parameter is  dependency of array  .if there is empty index react tells us to run the components only 1 time
// when count is added to index than react will run the components until the reactState i.e count will run . it will always compare the 
//value i.e [0] = [0] .it there is such type than it will not run the components 

  return (
    <div>

    <pre>{JSON.stringify(starWardata,null,2)} </pre>
    <h2> The count is {count} </h2>
    <button onClick={() => setCount( previousNumber  =>  previousNumber + 1 )}> Add  </button>
   </div>
  )
 }






// useEffect for fetching Data 

import  React from 'react'

export default function App(){

const[starWardata ,setStarWarData ]= React.useState({});
const [count ,setCount]= React.useState(0);

console.log("components rendered");

React.useEffect(function() {
 
 // this fetch is like a side effect because it is outside of react environment 
   fetch("https://jsonplaceholder.typicode.com/users")  // fatching the API 
.then(res => res.json())  // receive  the response with json
.then(data =>setStarWarData(data)) //turning into javascript objet for using 

},[])  
//adding the second parameter is  dependency of array  .if there is empty index react tells us to run the components only 1 time
// when count is added to index than react will run the components until the reactState i.e count will run . it will always compare the 
//value i.e [0] = [0] .it there is such type than it will not run the components 

  return (
    <div>

    <pre>{JSON.stringify(starWardata,null,2)} </pre>
    <h2> The count is {count} </h2>
    <button onClick={() => setCount( previousNumber  =>  previousNumber + 1 )}> Add  </button>
   </div>
  )
// }








// Build a meme generator  useEffect when to use Dependency 


import  React from 'react'

export default function App(){

const[starWardata ,setStarWarData ]= React.useState({});
const [count ,setCount]= React.useState(0);

console.log("components rendered");

React.useEffect(function() {
   fetch(`https://jsonplaceholder.typicode.com/users/${count}`)  
.then(res => res.json())  
.then(data =>setStarWarData(data)) 

},[count])  
//adding the second parameter is  dependency of array  .if there is empty index react tells us to run the components only 1 time
// when count is added to index than react will run the components until the reactState i.e count will run . it will always compare the 
//value i.e [0] = [0] .it there is such type than it will not run the components 

  return (
    <div>
    <h2> The count is {count} </h2>
    <button onClick={() => setCount( previousNumber  =>  previousNumber + 1 )}> Add  </button>
    <pre>{JSON.stringify(starWardata,null,2)} </pre>
    
   </div>
  )
}
