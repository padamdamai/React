1))) READ THE DATA ON CONSOLE SCREEN FROM THE INPUT TEXT  IN FORM 
import React from "react";


export default function Form(){
  const [firstName ,setFirstName] = React.useState("")

  function handleChange(event){
    console.log(event.target.value)
  
  }
  


  return <div>
    <form>

   <input
    type="text"
     placeholder="Name" 
     onChange={handleChange}
     />

    </form>
  </div>
}

2))) Update first name in every key stroke ----------------------------------------------------------------------------------------------------------------

import React from "react";


export default function Form(){
  const [firstName ,setFirstName] = React.useState("")

  console.log(firstName)
  function handleChange(event){
   setFirstName(event.target.value)
  
  }
  


  return <div>
    <form>

   <input
    type="text"
     placeholder="Name" 
     onChange={handleChange}
     id="firstName"
     />

    </form>
  </div>
}


3))))----------------------------------------------------------------------------------------------------------------

// Bulding a meme generator | forms state object 

import React from "react";

export default function Form(){
  const [formData ,setFormData] = React.useState({
    firstName : "",
    lastName : "",
    E_mail : ""
  })

  console.log(formData)

  function handleChange(event){
    setFormData(preFormData => {
      return {
        ...preFormData,
        [event.target.name ]: event.target.value
      }
    })
  
  
  }
  


  return <div>
    <form>

   <input  type="text" placeholder="First Name" onChange={handleChange} name = "firstName" />
   <input  type="text" placeholder=" Last Name" onChange={handleChange} name = "lastName"/>
 <input  type="email" placeholder="G-mail" onChange={handleChange} name = "E_mail"/>

    </form>
  </div>
}





3))))----------------------------------------------------------------------------------------------------------------

// form in react  :Tetarea

import React from "react";

export default function Form(){
  const [formData ,setFormData] = React.useState({
    firstName : "",
    lastName : "",
    E_mail : "",
    comment :""
  })

  console.log(formData)

  function handleChange(event){
    setFormData(preFormData => {
      return {
        ...preFormData,
        [event.target.name ]: event.target.value
      }
    })
  
  
  }
  
  return <div>
    <form>

   <input  type="text" placeholder="First Name" onChange={handleChange} value={formData.firstName} name = "firstName" />
   <input  type="text" placeholder=" Last Name" onChange={handleChange} value={formData.lastName} name = "lastName"/>
   <input  type="email" placeholder="G-mail" onChange={handleChange}    value={formData.E_mail} name = "E_mail"/>
   <textarea  rows= "5" cols="23" value={formData.comment} onChange={handleChange} placeholder="Comment" name="comment"/>

    </form>
  </div>
}




4)))))) CHECKBOX -----------------------------------------------------------------------------------------------------------------------


// form in react  :Checkbox

import React from "react";

export default function Form(){
  const [formData ,setFormData] = React.useState({
    firstName : "",
    lastName : "",
    E_mail : "",
    comment :"",
    isFriendly:false

  })

  console.log(formData)

  function handleChange(event){

    const {name,value,checked,type} = event.target
    setFormData(preFormData => {
      return {
        ...preFormData,
        // [event.target.name ]:event.target.value     
          // {instead of defining in this way  we can do in shortcut way}
        [name] :type === "checked" ? checked:value
      }
    })
  
  
  }
  
  return <div>
    <form>
   <input  type="text" placeholder="First Name" onChange={handleChange} value={formData.firstName} name = "firstName" /><br/>
   <input  type="text" placeholder=" Last Name" onChange={handleChange} value={formData.lastName} name = "lastName"/><br/>
   <input  type="email" placeholder="G-mail" onChange={handleChange}    value={formData.E_mail} name = "E_mail"/><br/>
   <textarea  rows= "3" cols="23" value={formData.comment} onChange={handleChange} placeholder="Comment" name="comment"/><br/>


     {/* checkbox hold only boolean value i.e either true or false   */}
   <input type="checkbox" id="isFriendly" name="isFriendly" checked={formData.isFriendly} 
  //  there is not the "value" property but there is checked property because checkbox checked either it is false or true
    onChange={handleChange} />
   <label htmlFor="isFriendly">Are you friendly ?</label><br/>



    </form>
  </div>
}
